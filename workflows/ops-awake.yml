name: ops-awake

on:
  workflow_dispatch: {}
  issue_comment:
    types: [created]
  schedule:
    - cron: "*/5 * * * *"   # 5분 주기 폴링(은닉 종료 자동 트리거)

jobs:
  gate:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.decide.outputs.run }}
    steps:
      - id: decide
        run: |
          set -e
          ev="${{ github.event_name }}"
          body="${{ github.event.comment.body }}"
          # 1) 수동 실행
          if [ "$ev" = "workflow_dispatch" ]; then
            echo "run=yes" >> $GITHUB_OUTPUT; exit 0; fi
          # 2) 이슈 댓글: Awake
          if [ "$ev" = "issue_comment" ] && echo "$body" | grep -qi 'Awake'; then
            echo "run=yes" >> $GITHUB_OUTPUT; exit 0; fi
          # 3) 스케줄: 은닉 종료 시각 도달
          target="${{ vars.CONCEAL_END_ISO }}"
          if [ "$ev" = "schedule" ] && [ -n "$target" ]; then
            now=$(date -u +%s)
            t=$(date -u -d "$target" +%s || echo 0)
            if [ "$t" -gt 0 ] && [ "$now" -ge "$t" ]; then
              echo "run=yes" >> $GITHUB_OUTPUT; exit 0
            fi
          fi
          echo "run=no" >> $GITHUB_OUTPUT

  vercel_deploy:
    needs: [gate]
    if: ${{ needs.gate.outputs.run == 'yes' }}
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Vercel Deploy Hook (prod)
        run: |
          test -n "${{ secrets.VERCEL_DEPLOY_HOOK_URL }}" || (echo "missing: VERCEL_DEPLOY_HOOK_URL" && exit 1)
          ok=0
          for i in 1 2 3; do
            code=$(curl -s -o /dev/null -w "%{http_code}" -X POST "${{ secrets.VERCEL_DEPLOY_HOOK_URL }}")
            echo "Deploy hook HTTP $code (try $i)"
            [ "$code" = "200" ] && ok=1 && break
            sleep 10
          done
          [ $ok -eq 1 ] || (echo "deploy hook failed" && exit 1)
      - name: Warmup
        run: sleep 30

  purge_cloudflare:
    needs: [vercel_deploy]
    if: ${{ needs.gate.outputs.run == 'yes' && secrets.CF_API_TOKEN != '' && secrets.CF_ZONE_ID != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Purge Cloudflare Cache (entire zone)
        run: |
          curl -sS -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}' | tee purge.json
          grep -q '"success":true' purge.json || (echo "cloudflare purge failed" && exit 1)

  verify:
    needs: [vercel_deploy, purge_cloudflare]
    if: ${{ needs.gate.outputs.run == 'yes' }}
    runs-on: ubuntu-latest
    steps:
      - name: Probe (retry up to 5)
        run: |
          ok=0
          for i in 1 2 3 4 5; do
            curl -fsSIL "https://espdialog.net/?nocache=$(date +%s)$i" | tee headers.txt || true
            if grep -Eiq '^HTTP/.* 200' headers.txt; then ok=1; break; fi
            sleep 6
          done
          [ $ok -eq 1 ] || (echo "verify: HTTP 200 not observed" && exit 1)

  report:
    needs: [verify]
    if: ${{ needs.gate.outputs.run == 'yes' && github.event_name == 'issue_comment' }}
    runs-on: ubuntu-latest
    steps:
      - name: Post result to issue
        env: { GH_TOKEN: ${{ github.token }} }
        run: |
          gh api repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            -f body="✅ Awake: deploy(+purge if set)+verify 완료 · $(date -u +%Y-%m-%dT%H:%M:%SZ)"
